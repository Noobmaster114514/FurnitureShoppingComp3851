@model FurnitureShopping.Models.user

<h2 align="center">Edit Information</h2>

<form action="" id="myForm" method="post">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.username, "Username:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" disabled class="form-control" value="@Model.username" />
                <input type="hidden" name="username" value="@Model.username" />
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pwd, "Password:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" name="pwd" class="form-control" value="@Model.pwd" />
                @Html.ValidationMessageFor(model => model.pwd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nickname, "Nickname:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nickname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sex, "Gender:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.sex == 0)
                {
                    <select name="sex" class="form-control">
                        <option value="0">Female</option>
                        <option value="1">Male</option>
                    </select>
                }
                else
                {
                    <select name="sex" class="form-control">
                        <option value="1">Male</option>
                        <option value="0">Female</option>
                    </select>
                }
                @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.introduce, "Introduction:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.introduce, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.introduce, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, "Age:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.img, "Avatar:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Avatar upload *@
                <input class="width-main input" type="file" datatype="*" id="pic" name="pic" value="" accept="image/*" onchange="upload(event)">
                <input type="hidden" name="img" id="img" value="@Model.img" />
                <div id="showImg">
                    <img src="@Model.img" width="50" height="50" alt="Alternate Text" />
                </div>
            </div>
        </div>
        @* Modify user ID, if not present, cannot specify for deletion *@
        <input type="hidden" name="id" value="@Model.id" />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

@* Need to include jQuery plugin for asynchronous upload *@
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    // Implement asynchronous upload
    function upload(event) {
        var imgPath = $("#pic").val();
        console.log(imgPath);
        // Check the file extension
        var strExtension = imgPath.substr(imgPath.lastIndexOf('.') + 1);

        if (strExtension != 'jpg' && strExtension != 'gif' && strExtension != 'png' && strExtension != 'bmp') {
            alert("Please select an image file");
            return;
        }
        // Implement file upload
        if (event.target.files[0].type.search('image') !== -1) {
            // Implement file image upload
            var formData = new FormData($("#myForm")[0]); // Create a file stream object
            // formData.append('pic', $("#img")[0]); // Add file stream (stream name, stream)
            // console.log(formData);
            $.ajax({
                url: "/Upload/file",
                type: "post",
                cache: false,
                processData: false,
                contentType: false,
                data: formData,
                success: function (res) {
                    console.log(res);
                    if (res.trim() == "209") {
                        alert("Please select an image!");
                        return;
                    }
                    if (res.trim() == "300") {
                        alert("The uploaded image cannot be empty!");
                        return;
                    }
                    if (res.trim() == "400") {
                        alert("Image upload failed!");
                        return;
                    }
                    // alert("Upload successful!");
                    $("#showImg").html("<img src='" + res + "' width='50' height='50' /><p style='color:red;'>Upload successful!</p>");
                    // Set the uploaded image address
                    var res = res.trim(); // Remove leading and trailing whitespace from the image
                    $("#img").val(res);
                },
                error: function (res) {
                    alert("Upload exception!");
                }
            });
        } else {
            alert('Only image uploads are supported');
        }
    }
</script>
