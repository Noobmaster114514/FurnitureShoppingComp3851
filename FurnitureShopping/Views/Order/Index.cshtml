@model IEnumerable<FurnitureShopping.Models.order>
@using FurnitureShopping.Models
@{
    // Declare the db instance once at the start
    var db = new FurnitureProjectDBEntities();
}
<table class="table">
    <tr>
        <th>Order Number</th>
        <th>Image</th>
        <th>Remarks</th>
        <th>Order Time</th>
        <th>Ordered By</th>
        <th>Details</th>
        <th>Actions</th> <!-- New column for actions -->
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.order_num)</td>
            <td>
                <!-- Fetch image based on aid from product_attribute using the single db instance -->
                @{
                    var firstDetail = item.order_detail.FirstOrDefault();
                    string imgUrl = firstDetail != null ? db.product_attribute
                                    .Where(p => p.id == firstDetail.aid)
                                    .Select(p => p.attrimg)
                                    .FirstOrDefault() ?? firstDetail.shopping.img
                                    : "defaultImagePath"; // Add a default image path if no details are present
                }
                <img src="@imgUrl" width="200" height="150" alt="Failed to load image" />
            </td>
            <td>@Html.DisplayFor(modelItem => item.mark)</td>
            <td>@Html.DisplayFor(modelItem => item.createtime)</td>
            <td>@Html.DisplayFor(modelItem => item.user.username)</td>
            <td>
                <!-- Order Details Display -->
                <table class="table table-bordered">
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total Price</th>
                    </tr>
                    @foreach (var detail in item.order_detail)
                    {
                        <!-- Fetch productAttribute using the same db instance -->
                        var productAttribute = db.product_attribute.FirstOrDefault(p => p.id == detail.aid);
                        decimal price = productAttribute?.price ?? detail.price ?? 0;
                        decimal totalPrice = price * (detail.count ?? 0);

                        <tr>
                            <td>@Html.DisplayFor(detailItem => detail.title)</td>
                            <td>@Html.DisplayFor(detailItem => detail.count)</td>
                            <td>@price</td>
                            <td>@totalPrice</td>
                        </tr>
                    }
                </table>
            </td>
            <td>
                <!-- Actions -->
                <a href="/Order/Details?id=@item.id" class="btn btn-success">View Order</a>
                <a href="/Order/Delete?id=@item.id" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this order?');">Delete Order</a> <!-- New delete button -->
            </td>
        </tr>
    }
</table>
